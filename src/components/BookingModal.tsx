import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import Icon from "@/components/ui/icon";

interface BookingModalProps {
  isOpen: boolean;
  onClose: () => void;
}

export default function BookingModal({ isOpen, onClose }: BookingModalProps) {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    date: "",
    time: "",
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", formData);
    onClose();
  };

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-[500px] max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="text-2xl font-bold text-green-600">
            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
          </DialogTitle>
          <DialogDescription className="text-gray-600">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-4">
          <div className="grid grid-cols-1 gap-4">
            <div>
              <Label htmlFor="name" className="text-sm font-medium text-gray-700">
                –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? *
              </Label>
              <Input
                id="name"
                value={formData.name}
                onChange={(e) => handleInputChange("name", e.target.value)}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                className="mt-1"
              />
            </div>

            <div>
              <div className="text-sm text-gray-600 mb-3 p-3 bg-green-50 rounded-lg">
                –ú—ã –±–µ—Ä–µ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏–º—Å—è –∫ –≤–∞—à–µ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏ üôèüèª
              </div>
              <Label htmlFor="phone" className="text-sm font-medium text-gray-700">
                –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
              </Label>
              <Input
                id="phone"
                type="tel"
                value={formData.phone}
                onChange={(e) => handleInputChange("phone", e.target.value)}
                placeholder="+7 (___) ___-__-__"
                required
                className="mt-1"
              />
            </div>

            <div>
              <Label htmlFor="date" className="text-sm font-medium text-gray-700">
                –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞ *
              </Label>
              <Input
                id="date"
                type="date"
                value={formData.date}
                onChange={(e) => handleInputChange("date", e.target.value)}
                required
                className="mt-1"
              />
            </div>

            <div>
              <Label htmlFor="time" className="text-sm font-medium text-gray-700">
                –ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è *
              </Label>
              <Select onValueChange={(value) => handleInputChange("time", value)}>
                <SelectTrigger className="mt-1">
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="09:00">09:00</SelectItem>
                  <SelectItem value="10:00">10:00</SelectItem>
                  <SelectItem value="11:00">11:00</SelectItem>
                  <SelectItem value="12:00">12:00</SelectItem>
                  <SelectItem value="13:00">13:00</SelectItem>
                  <SelectItem value="14:00">14:00</SelectItem>
                  <SelectItem value="15:00">15:00</SelectItem>
                  <SelectItem value="16:00">16:00</SelectItem>
                  <SelectItem value="17:00">17:00</SelectItem>
                  <SelectItem value="18:00">18:00</SelectItem>
                  <SelectItem value="19:00">19:00</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          <div className="flex flex-col space-y-3 pt-4">
            <Button
              type="submit"
              className="w-full bg-green-500 hover:bg-green-600 text-white font-medium py-3"
            >
              <Icon name="Calendar" size={20} className="mr-2" />
              –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
            </Button>
            
            <div className="text-xs text-gray-500 text-center">
              –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
            </div>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}